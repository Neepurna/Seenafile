rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function hasRequiredReviewFields() {
      let data = request.resource.data;
      return data.keys().hasAll([
        'movieId',
        'movieTitle',
        'rating',
        'review',
        'createdAt',
        'category'
      ]);
    }

    // Global movies/reviews collection
    match /movies/{movieId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() 
        && request.resource.data.userId == request.auth.uid 
        && hasRequiredReviewFields();
      allow update: if isSignedIn() 
        && resource.data.userId == request.auth.uid;
      allow delete: if isSignedIn() 
        && resource.data.userId == request.auth.uid;
    }
    
    // User specific data
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isOwner(userId);
      
      // User's movies collection (includes reviews)
      match /movies/{movieId} {
        allow read: if isSignedIn(); // Allow all signed-in users to read
        allow create: if isSignedIn() 
          && isOwner(userId) 
          && hasRequiredReviewFields();
        allow update, delete: if isSignedIn() && isOwner(userId);
      }

      // User's reviews subcollection
      match /reviews/{reviewId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && isOwner(userId);
      }

      // User's shared reviews
      match /sharedReviews/{reviewId} {
        allow read: if isSignedIn();
        allow create, update: if isSignedIn() 
          && isOwner(userId) 
          && hasRequiredReviewFields();
        allow delete: if isSignedIn() && isOwner(userId);
      }
    }

    // Shared reviews collection
    match /sharedReviews/{reviewId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() 
        && request.resource.data.userId == request.auth.uid 
        && hasRequiredReviewFields();
      allow update, delete: if isSignedIn() 
        && resource.data.userId == request.auth.uid;
    }
  }
}
